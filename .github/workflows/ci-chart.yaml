name: Lint and Test Charts

on:
  pull_request:
    branches:
      - main
    paths:
      - charts/**
      - .github/workflows/ci-chart.yaml

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.14.4

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${DEFAULT_BRANCH})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct lint --target-branch ${DEFAULT_BRANCH}
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

      - name: Check README diff
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          docker run --rm --volume "$(pwd):/helm-docs" jnorwood/helm-docs:latest
          if ! git diff --exit-code; then
            echo "Error: Please update the chart README"
            echo "  docker run --rm --volume \"\$(pwd):/helm-docs\" jnorwood/helm-docs:latest"
            exit 1
          fi

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Prepare cluster for tests
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager \
              --namespace cert-manager \
              --create-namespace \
              --set installCRDs=true
          kubectl create namespace edera-system
          kubectl apply -f ./examples/self-signed-certs/self-signed-certs.yaml \
              --namespace edera-system

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install \
            --namespace edera-system \
            --target-branch ${DEFAULT_BRANCH}
        env:
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
